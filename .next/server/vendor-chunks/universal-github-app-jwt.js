"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/universal-github-app-jwt";
exports.ids = ["vendor-chunks/universal-github-app-jwt"];
exports.modules = {

/***/ "(ssr)/./node_modules/universal-github-app-jwt/index.js":
/*!********************************************************!*\
  !*** ./node_modules/universal-github-app-jwt/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ githubAppJwt)\n/* harmony export */ });\n/* harmony import */ var _lib_get_token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/get-token.js */ \"(ssr)/./node_modules/universal-github-app-jwt/lib/get-token.js\");\n// @ts-check\n\n// @ts-ignore - #get-token is defined in \"imports\" in package.json\n\n\n/**\n * @param {import(\".\").Options} options\n * @returns {Promise<import(\".\").Result>}\n */\nasync function githubAppJwt({\n  id,\n  privateKey,\n  now = Math.floor(Date.now() / 1000),\n}) {\n  // Private keys are often times configured as environment variables, in which case line breaks are escaped using `\\\\n`.\n  // Replace these here for convenience.\n  const privateKeyWithNewlines = privateKey.replace(/\\\\n/g, '\\n');\n\n  // When creating a JSON Web Token, it sets the \"issued at time\" (iat) to 30s\n  // in the past as we have seen people running situations where the GitHub API\n  // claimed the iat would be in future. It turned out the clocks on the\n  // different machine were not in sync.\n  const nowWithSafetyMargin = now - 30;\n  const expiration = nowWithSafetyMargin + 60 * 10; // JWT expiration time (10 minute maximum)\n\n  const payload = {\n    iat: nowWithSafetyMargin, // Issued at time\n    exp: expiration,\n    iss: id,\n  };\n\n  const token = await (0,_lib_get_token_js__WEBPACK_IMPORTED_MODULE_0__.getToken)({\n    privateKey: privateKeyWithNewlines,\n    payload,\n  });\n\n  return {\n    appId: id,\n    expiration,\n    token,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdW5pdmVyc2FsLWdpdGh1Yi1hcHAtand0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBRUE7QUFDOEM7O0FBRTlDO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEMsYUFBYTtBQUNiO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Q7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLDJEQUFRO0FBQzlCO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bml2ZXJzYWwtZ2l0aHViLWFwcC1qd3QvaW5kZXguanM/NmEyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtY2hlY2tcblxuLy8gQHRzLWlnbm9yZSAtICNnZXQtdG9rZW4gaXMgZGVmaW5lZCBpbiBcImltcG9ydHNcIiBpbiBwYWNrYWdlLmpzb25cbmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSBcIi4vbGliL2dldC10b2tlbi5qc1wiO1xuXG4vKipcbiAqIEBwYXJhbSB7aW1wb3J0KFwiLlwiKS5PcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxpbXBvcnQoXCIuXCIpLlJlc3VsdD59XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdpdGh1YkFwcEp3dCh7XG4gIGlkLFxuICBwcml2YXRlS2V5LFxuICBub3cgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSxcbn0pIHtcbiAgLy8gUHJpdmF0ZSBrZXlzIGFyZSBvZnRlbiB0aW1lcyBjb25maWd1cmVkIGFzIGVudmlyb25tZW50IHZhcmlhYmxlcywgaW4gd2hpY2ggY2FzZSBsaW5lIGJyZWFrcyBhcmUgZXNjYXBlZCB1c2luZyBgXFxcXG5gLlxuICAvLyBSZXBsYWNlIHRoZXNlIGhlcmUgZm9yIGNvbnZlbmllbmNlLlxuICBjb25zdCBwcml2YXRlS2V5V2l0aE5ld2xpbmVzID0gcHJpdmF0ZUtleS5yZXBsYWNlKC9cXFxcbi9nLCAnXFxuJyk7XG5cbiAgLy8gV2hlbiBjcmVhdGluZyBhIEpTT04gV2ViIFRva2VuLCBpdCBzZXRzIHRoZSBcImlzc3VlZCBhdCB0aW1lXCIgKGlhdCkgdG8gMzBzXG4gIC8vIGluIHRoZSBwYXN0IGFzIHdlIGhhdmUgc2VlbiBwZW9wbGUgcnVubmluZyBzaXR1YXRpb25zIHdoZXJlIHRoZSBHaXRIdWIgQVBJXG4gIC8vIGNsYWltZWQgdGhlIGlhdCB3b3VsZCBiZSBpbiBmdXR1cmUuIEl0IHR1cm5lZCBvdXQgdGhlIGNsb2NrcyBvbiB0aGVcbiAgLy8gZGlmZmVyZW50IG1hY2hpbmUgd2VyZSBub3QgaW4gc3luYy5cbiAgY29uc3Qgbm93V2l0aFNhZmV0eU1hcmdpbiA9IG5vdyAtIDMwO1xuICBjb25zdCBleHBpcmF0aW9uID0gbm93V2l0aFNhZmV0eU1hcmdpbiArIDYwICogMTA7IC8vIEpXVCBleHBpcmF0aW9uIHRpbWUgKDEwIG1pbnV0ZSBtYXhpbXVtKVxuXG4gIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgaWF0OiBub3dXaXRoU2FmZXR5TWFyZ2luLCAvLyBJc3N1ZWQgYXQgdGltZVxuICAgIGV4cDogZXhwaXJhdGlvbixcbiAgICBpc3M6IGlkLFxuICB9O1xuXG4gIGNvbnN0IHRva2VuID0gYXdhaXQgZ2V0VG9rZW4oe1xuICAgIHByaXZhdGVLZXk6IHByaXZhdGVLZXlXaXRoTmV3bGluZXMsXG4gICAgcGF5bG9hZCxcbiAgfSk7XG5cbiAgcmV0dXJuIHtcbiAgICBhcHBJZDogaWQsXG4gICAgZXhwaXJhdGlvbixcbiAgICB0b2tlbixcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/universal-github-app-jwt/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/universal-github-app-jwt/lib/crypto-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/universal-github-app-jwt/lib/crypto-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertPrivateKey: () => (/* binding */ convertPrivateKey)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in node_crypto__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"convertPrivateKey\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => node_crypto__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/universal-github-app-jwt/lib/utils.js\");\n// this can be removed once we only support Node 20+\n\n\n\n\n\n// no-op, unfortunately there is no way to transform from PKCS8 or OpenSSH to PKCS1 with WebCrypto\nfunction convertPrivateKey(privateKey) {\n  if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isPkcs1)(privateKey)) return privateKey;\n\n  return (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.createPrivateKey)(privateKey).export({\n    type: \"pkcs8\",\n    format: \"pem\",\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdW5pdmVyc2FsLWdpdGh1Yi1hcHAtand0L2xpYi9jcnlwdG8tbm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUM0QjtBQUNtQjs7QUFFVjs7QUFFckM7QUFDTztBQUNQLE9BQU8sa0RBQU87O0FBRWQsU0FBUyw2REFBZ0I7QUFDekI7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bml2ZXJzYWwtZ2l0aHViLWFwcC1qd3QvbGliL2NyeXB0by1ub2RlLmpzP2M3YWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBjYW4gYmUgcmVtb3ZlZCBvbmNlIHdlIG9ubHkgc3VwcG9ydCBOb2RlIDIwK1xuZXhwb3J0ICogZnJvbSBcIm5vZGU6Y3J5cHRvXCI7XG5pbXBvcnQgeyBjcmVhdGVQcml2YXRlS2V5IH0gZnJvbSBcIm5vZGU6Y3J5cHRvXCI7XG5cbmltcG9ydCB7IGlzUGtjczEgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuXG4vLyBuby1vcCwgdW5mb3J0dW5hdGVseSB0aGVyZSBpcyBubyB3YXkgdG8gdHJhbnNmb3JtIGZyb20gUEtDUzggb3IgT3BlblNTSCB0byBQS0NTMSB3aXRoIFdlYkNyeXB0b1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRQcml2YXRlS2V5KHByaXZhdGVLZXkpIHtcbiAgaWYgKCFpc1BrY3MxKHByaXZhdGVLZXkpKSByZXR1cm4gcHJpdmF0ZUtleTtcblxuICByZXR1cm4gY3JlYXRlUHJpdmF0ZUtleShwcml2YXRlS2V5KS5leHBvcnQoe1xuICAgIHR5cGU6IFwicGtjczhcIixcbiAgICBmb3JtYXQ6IFwicGVtXCIsXG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/universal-github-app-jwt/lib/crypto-node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/universal-github-app-jwt/lib/get-token.js":
/*!****************************************************************!*\
  !*** ./node_modules/universal-github-app-jwt/lib/get-token.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getToken: () => (/* binding */ getToken)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/universal-github-app-jwt/lib/utils.js\");\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #crypto */ \"(ssr)/./node_modules/universal-github-app-jwt/lib/crypto-node.js\");\n// we don't @ts-check here because it chokes crypto which is a global API in modern JS runtime environments\n\n\n\n\n\n/**\n * @param {import('../internals').GetTokenOptions} options\n * @returns {Promise<string>}\n */\nasync function getToken({ privateKey, payload }) {\n  const convertedPrivateKey = (0,_crypto__WEBPACK_IMPORTED_MODULE_1__.convertPrivateKey)(privateKey);\n\n  // WebCrypto only supports PKCS#8, unfortunately\n  /* c8 ignore start */\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isPkcs1)(convertedPrivateKey)) {\n    throw new Error(\n      \"[universal-github-app-jwt] Private Key is in PKCS#1 format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#private-key-formats\"\n    );\n  }\n  /* c8 ignore stop */\n\n  // WebCrypto does not support OpenSSH, unfortunately\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isOpenSsh)(convertedPrivateKey)) {\n    throw new Error(\n      \"[universal-github-app-jwt] Private Key is in OpenSSH format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#private-key-formats\"\n    );\n  }\n\n  const algorithm = {\n    name: \"RSASSA-PKCS1-v1_5\",\n    hash: { name: \"SHA-256\" },\n  };\n\n  /** @type {import('../internals').Header} */\n  const header = { alg: \"RS256\", typ: \"JWT\" };\n\n  const privateKeyDER = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getDERfromPEM)(convertedPrivateKey);\n  const importedKey = await _crypto__WEBPACK_IMPORTED_MODULE_1__.subtle.importKey(\n    \"pkcs8\",\n    privateKeyDER,\n    algorithm,\n    false,\n    [\"sign\"]\n  );\n\n  const encodedMessage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getEncodedMessage)(header, payload);\n  const encodedMessageArrBuf = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.string2ArrayBuffer)(encodedMessage);\n\n  const signatureArrBuf = await _crypto__WEBPACK_IMPORTED_MODULE_1__.subtle.sign(\n    algorithm.name,\n    importedKey,\n    encodedMessageArrBuf\n  );\n\n  const encodedSignature = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.base64encode)(signatureArrBuf);\n\n  return `${encodedMessage}.${encodedSignature}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdW5pdmVyc2FsLWdpdGh1Yi1hcHAtand0L2xpYi9nZXQtdG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBU29COztBQUVnQzs7QUFFcEQ7QUFDQSxXQUFXLHdDQUF3QztBQUNuRCxhQUFhO0FBQ2I7QUFDTywwQkFBMEIscUJBQXFCO0FBQ3RELDhCQUE4QiwwREFBaUI7O0FBRS9DO0FBQ0E7QUFDQSxNQUFNLGtEQUFPO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0sb0RBQVM7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxpQkFBaUI7QUFDN0I7O0FBRUEsYUFBYSwrQkFBK0I7QUFDNUMsbUJBQW1COztBQUVuQix3QkFBd0Isd0RBQWE7QUFDckMsNEJBQTRCLDJDQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsNERBQWlCO0FBQzFDLCtCQUErQiw2REFBa0I7O0FBRWpELGdDQUFnQywyQ0FBTTtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkIsdURBQVk7O0FBRXZDLFlBQVksZUFBZSxHQUFHLGlCQUFpQjtBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bml2ZXJzYWwtZ2l0aHViLWFwcC1qd3QvbGliL2dldC10b2tlbi5qcz8zYTFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHdlIGRvbid0IEB0cy1jaGVjayBoZXJlIGJlY2F1c2UgaXQgY2hva2VzIGNyeXB0byB3aGljaCBpcyBhIGdsb2JhbCBBUEkgaW4gbW9kZXJuIEpTIHJ1bnRpbWUgZW52aXJvbm1lbnRzXG5cbmltcG9ydCB7XG4gIGlzUGtjczEsXG4gIGlzT3BlblNzaCxcbiAgZ2V0RW5jb2RlZE1lc3NhZ2UsXG4gIGdldERFUmZyb21QRU0sXG4gIHN0cmluZzJBcnJheUJ1ZmZlcixcbiAgYmFzZTY0ZW5jb2RlLFxufSBmcm9tIFwiLi91dGlscy5qc1wiO1xuXG5pbXBvcnQgeyBzdWJ0bGUsIGNvbnZlcnRQcml2YXRlS2V5IH0gZnJvbSBcIiNjcnlwdG9cIjtcblxuLyoqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWxzJykuR2V0VG9rZW5PcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG9rZW4oeyBwcml2YXRlS2V5LCBwYXlsb2FkIH0pIHtcbiAgY29uc3QgY29udmVydGVkUHJpdmF0ZUtleSA9IGNvbnZlcnRQcml2YXRlS2V5KHByaXZhdGVLZXkpO1xuXG4gIC8vIFdlYkNyeXB0byBvbmx5IHN1cHBvcnRzIFBLQ1MjOCwgdW5mb3J0dW5hdGVseVxuICAvKiBjOCBpZ25vcmUgc3RhcnQgKi9cbiAgaWYgKGlzUGtjczEoY29udmVydGVkUHJpdmF0ZUtleSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlt1bml2ZXJzYWwtZ2l0aHViLWFwcC1qd3RdIFByaXZhdGUgS2V5IGlzIGluIFBLQ1MjMSBmb3JtYXQsIGJ1dCBvbmx5IFBLQ1MjOCBpcyBzdXBwb3J0ZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZ3IybS91bml2ZXJzYWwtZ2l0aHViLWFwcC1qd3QjcHJpdmF0ZS1rZXktZm9ybWF0c1wiXG4gICAgKTtcbiAgfVxuICAvKiBjOCBpZ25vcmUgc3RvcCAqL1xuXG4gIC8vIFdlYkNyeXB0byBkb2VzIG5vdCBzdXBwb3J0IE9wZW5TU0gsIHVuZm9ydHVuYXRlbHlcbiAgaWYgKGlzT3BlblNzaChjb252ZXJ0ZWRQcml2YXRlS2V5KSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiW3VuaXZlcnNhbC1naXRodWItYXBwLWp3dF0gUHJpdmF0ZSBLZXkgaXMgaW4gT3BlblNTSCBmb3JtYXQsIGJ1dCBvbmx5IFBLQ1MjOCBpcyBzdXBwb3J0ZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZ3IybS91bml2ZXJzYWwtZ2l0aHViLWFwcC1qd3QjcHJpdmF0ZS1rZXktZm9ybWF0c1wiXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IGFsZ29yaXRobSA9IHtcbiAgICBuYW1lOiBcIlJTQVNTQS1QS0NTMS12MV81XCIsXG4gICAgaGFzaDogeyBuYW1lOiBcIlNIQS0yNTZcIiB9LFxuICB9O1xuXG4gIC8qKiBAdHlwZSB7aW1wb3J0KCcuLi9pbnRlcm5hbHMnKS5IZWFkZXJ9ICovXG4gIGNvbnN0IGhlYWRlciA9IHsgYWxnOiBcIlJTMjU2XCIsIHR5cDogXCJKV1RcIiB9O1xuXG4gIGNvbnN0IHByaXZhdGVLZXlERVIgPSBnZXRERVJmcm9tUEVNKGNvbnZlcnRlZFByaXZhdGVLZXkpO1xuICBjb25zdCBpbXBvcnRlZEtleSA9IGF3YWl0IHN1YnRsZS5pbXBvcnRLZXkoXG4gICAgXCJwa2NzOFwiLFxuICAgIHByaXZhdGVLZXlERVIsXG4gICAgYWxnb3JpdGhtLFxuICAgIGZhbHNlLFxuICAgIFtcInNpZ25cIl1cbiAgKTtcblxuICBjb25zdCBlbmNvZGVkTWVzc2FnZSA9IGdldEVuY29kZWRNZXNzYWdlKGhlYWRlciwgcGF5bG9hZCk7XG4gIGNvbnN0IGVuY29kZWRNZXNzYWdlQXJyQnVmID0gc3RyaW5nMkFycmF5QnVmZmVyKGVuY29kZWRNZXNzYWdlKTtcblxuICBjb25zdCBzaWduYXR1cmVBcnJCdWYgPSBhd2FpdCBzdWJ0bGUuc2lnbihcbiAgICBhbGdvcml0aG0ubmFtZSxcbiAgICBpbXBvcnRlZEtleSxcbiAgICBlbmNvZGVkTWVzc2FnZUFyckJ1ZlxuICApO1xuXG4gIGNvbnN0IGVuY29kZWRTaWduYXR1cmUgPSBiYXNlNjRlbmNvZGUoc2lnbmF0dXJlQXJyQnVmKTtcblxuICByZXR1cm4gYCR7ZW5jb2RlZE1lc3NhZ2V9LiR7ZW5jb2RlZFNpZ25hdHVyZX1gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/universal-github-app-jwt/lib/get-token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/universal-github-app-jwt/lib/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/universal-github-app-jwt/lib/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64encode: () => (/* binding */ base64encode),\n/* harmony export */   getDERfromPEM: () => (/* binding */ getDERfromPEM),\n/* harmony export */   getEncodedMessage: () => (/* binding */ getEncodedMessage),\n/* harmony export */   isOpenSsh: () => (/* binding */ isOpenSsh),\n/* harmony export */   isPkcs1: () => (/* binding */ isPkcs1),\n/* harmony export */   string2ArrayBuffer: () => (/* binding */ string2ArrayBuffer)\n/* harmony export */ });\n// we don't @ts-check here because it chokes on atob and btoa which are available in all modern JS runtime environments\n\n/**\n * @param {string} privateKey\n * @returns {boolean}\n */\nfunction isPkcs1(privateKey) {\n  return privateKey.includes(\"-----BEGIN RSA PRIVATE KEY-----\");\n}\n\n/**\n * @param {string} privateKey\n * @returns {boolean}\n */\nfunction isOpenSsh(privateKey) {\n  return privateKey.includes(\"-----BEGIN OPENSSH PRIVATE KEY-----\");\n}\n\n/**\n * @param {string} str\n * @returns {ArrayBuffer}\n */\nfunction string2ArrayBuffer(str) {\n  const buf = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n/**\n * @param {string} pem\n * @returns {ArrayBuffer}\n */\nfunction getDERfromPEM(pem) {\n  const pemB64 = pem\n    .trim()\n    .split(\"\\n\")\n    .slice(1, -1) // Remove the --- BEGIN / END PRIVATE KEY ---\n    .join(\"\");\n\n  const decoded = atob(pemB64);\n  return string2ArrayBuffer(decoded);\n}\n\n/**\n * @param {import('../internals').Header} header\n * @param {import('../internals').Payload} payload\n * @returns {string}\n */\nfunction getEncodedMessage(header, payload) {\n  return `${base64encodeJSON(header)}.${base64encodeJSON(payload)}`;\n}\n\n/**\n * @param {ArrayBuffer} buffer\n * @returns {string}\n */\nfunction base64encode(buffer) {\n  var binary = \"\";\n  var bytes = new Uint8Array(buffer);\n  var len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  return fromBase64(btoa(binary));\n}\n\n/**\n * @param {string} base64\n * @returns {string}\n */\nfunction fromBase64(base64) {\n  return base64.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\n/**\n * @param {Record<string,unknown>} obj\n * @returns {string}\n */\nfunction base64encodeJSON(obj) {\n  return fromBase64(btoa(JSON.stringify(obj)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdW5pdmVyc2FsLWdpdGh1Yi1hcHAtand0L2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLHVDQUF1QyxZQUFZO0FBQ25EO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLCtCQUErQjtBQUMxQyxXQUFXLGdDQUFnQztBQUMzQyxhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVkseUJBQXlCLEdBQUcsMEJBQTBCO0FBQ2xFOztBQUVBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsd0JBQXdCO0FBQ25DLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bml2ZXJzYWwtZ2l0aHViLWFwcC1qd3QvbGliL3V0aWxzLmpzPzMyNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gd2UgZG9uJ3QgQHRzLWNoZWNrIGhlcmUgYmVjYXVzZSBpdCBjaG9rZXMgb24gYXRvYiBhbmQgYnRvYSB3aGljaCBhcmUgYXZhaWxhYmxlIGluIGFsbCBtb2Rlcm4gSlMgcnVudGltZSBlbnZpcm9ubWVudHNcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJpdmF0ZUtleVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1BrY3MxKHByaXZhdGVLZXkpIHtcbiAgcmV0dXJuIHByaXZhdGVLZXkuaW5jbHVkZXMoXCItLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tXCIpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcml2YXRlS2V5XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT3BlblNzaChwcml2YXRlS2V5KSB7XG4gIHJldHVybiBwcml2YXRlS2V5LmluY2x1ZGVzKFwiLS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS1cIik7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHJldHVybnMge0FycmF5QnVmZmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5nMkFycmF5QnVmZmVyKHN0cikge1xuICBjb25zdCBidWYgPSBuZXcgQXJyYXlCdWZmZXIoc3RyLmxlbmd0aCk7XG4gIGNvbnN0IGJ1ZlZpZXcgPSBuZXcgVWludDhBcnJheShidWYpO1xuICBmb3IgKGxldCBpID0gMCwgc3RyTGVuID0gc3RyLmxlbmd0aDsgaSA8IHN0ckxlbjsgaSsrKSB7XG4gICAgYnVmVmlld1tpXSA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICB9XG4gIHJldHVybiBidWY7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHBlbVxuICogQHJldHVybnMge0FycmF5QnVmZmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0REVSZnJvbVBFTShwZW0pIHtcbiAgY29uc3QgcGVtQjY0ID0gcGVtXG4gICAgLnRyaW0oKVxuICAgIC5zcGxpdChcIlxcblwiKVxuICAgIC5zbGljZSgxLCAtMSkgLy8gUmVtb3ZlIHRoZSAtLS0gQkVHSU4gLyBFTkQgUFJJVkFURSBLRVkgLS0tXG4gICAgLmpvaW4oXCJcIik7XG5cbiAgY29uc3QgZGVjb2RlZCA9IGF0b2IocGVtQjY0KTtcbiAgcmV0dXJuIHN0cmluZzJBcnJheUJ1ZmZlcihkZWNvZGVkKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWxzJykuSGVhZGVyfSBoZWFkZXJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbHMnKS5QYXlsb2FkfSBwYXlsb2FkXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5jb2RlZE1lc3NhZ2UoaGVhZGVyLCBwYXlsb2FkKSB7XG4gIHJldHVybiBgJHtiYXNlNjRlbmNvZGVKU09OKGhlYWRlcil9LiR7YmFzZTY0ZW5jb2RlSlNPTihwYXlsb2FkKX1gO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7QXJyYXlCdWZmZXJ9IGJ1ZmZlclxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJhc2U2NGVuY29kZShidWZmZXIpIHtcbiAgdmFyIGJpbmFyeSA9IFwiXCI7XG4gIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcik7XG4gIHZhciBsZW4gPSBieXRlcy5ieXRlTGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYmluYXJ5ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0pO1xuICB9XG5cbiAgcmV0dXJuIGZyb21CYXNlNjQoYnRvYShiaW5hcnkpKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZTY0XG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmcm9tQmFzZTY0KGJhc2U2NCkge1xuICByZXR1cm4gYmFzZTY0LnJlcGxhY2UoLz0vZywgXCJcIikucmVwbGFjZSgvXFwrL2csIFwiLVwiKS5yZXBsYWNlKC9cXC8vZywgXCJfXCIpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7UmVjb3JkPHN0cmluZyx1bmtub3duPn0gb2JqXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBiYXNlNjRlbmNvZGVKU09OKG9iaikge1xuICByZXR1cm4gZnJvbUJhc2U2NChidG9hKEpTT04uc3RyaW5naWZ5KG9iaikpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/universal-github-app-jwt/lib/utils.js\n");

/***/ })

};
;